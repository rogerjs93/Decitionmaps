{"version":3,"file":"pieDiagram-8a3498a8-DHEjIZh-.js","sources":["../../node_modules/mermaid/dist/pieDiagram-8a3498a8.js"],"sourcesContent":["import { B as defaultConfig, q as setDiagramTitle, t as getDiagramTitle, s as setAccTitle, g as getAccTitle, b as setAccDescription, a as getAccDescription, v as clear$1, d as sanitizeText, c as getConfig$1, l as log, C as cleanAndMerge, A as selectSvgElement, D as parseFontSize, i as configureSvgSize } from \"./mermaid-b5860b54.js\";\nimport { arc, scaleOrdinal, pie } from \"d3\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 3], $V1 = [1, 4], $V2 = [1, 5], $V3 = [1, 6], $V4 = [1, 10, 12, 14, 16, 18, 19, 20, 21, 22], $V5 = [2, 4], $V6 = [1, 5, 10, 12, 14, 16, 18, 19, 20, 21, 22], $V7 = [20, 21, 22], $V8 = [2, 7], $V9 = [1, 12], $Va = [1, 13], $Vb = [1, 14], $Vc = [1, 15], $Vd = [1, 16], $Ve = [1, 17];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"eol\": 4, \"PIE\": 5, \"document\": 6, \"showData\": 7, \"line\": 8, \"statement\": 9, \"txt\": 10, \"value\": 11, \"title\": 12, \"title_value\": 13, \"acc_title\": 14, \"acc_title_value\": 15, \"acc_descr\": 16, \"acc_descr_value\": 17, \"acc_descr_multiline_value\": 18, \"section\": 19, \"NEWLINE\": 20, \";\": 21, \"EOF\": 22, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 5: \"PIE\", 7: \"showData\", 10: \"txt\", 11: \"value\", 12: \"title\", 13: \"title_value\", 14: \"acc_title\", 15: \"acc_title_value\", 16: \"acc_descr\", 17: \"acc_descr_value\", 18: \"acc_descr_multiline_value\", 19: \"section\", 20: \"NEWLINE\", 21: \";\", 22: \"EOF\" },\n    productions_: [0, [3, 2], [3, 2], [3, 3], [6, 0], [6, 2], [8, 2], [9, 0], [9, 2], [9, 2], [9, 2], [9, 2], [9, 1], [9, 1], [4, 1], [4, 1], [4, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 3:\n          yy.setShowData(true);\n          break;\n        case 6:\n          this.$ = $$[$0 - 1];\n          break;\n        case 8:\n          yy.addSection($$[$0 - 1], yy.cleanupValue($$[$0]));\n          break;\n        case 9:\n          this.$ = $$[$0].trim();\n          yy.setDiagramTitle(this.$);\n          break;\n        case 10:\n          this.$ = $$[$0].trim();\n          yy.setAccTitle(this.$);\n          break;\n        case 11:\n        case 12:\n          this.$ = $$[$0].trim();\n          yy.setAccDescription(this.$);\n          break;\n        case 13:\n          yy.addSection($$[$0].substr(8));\n          this.$ = $$[$0].substr(8);\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: 2, 5: $V0, 20: $V1, 21: $V2, 22: $V3 }, { 1: [3] }, { 3: 7, 4: 2, 5: $V0, 20: $V1, 21: $V2, 22: $V3 }, o($V4, $V5, { 6: 8, 7: [1, 9] }), o($V6, [2, 14]), o($V6, [2, 15]), o($V6, [2, 16]), { 1: [2, 1] }, o($V7, $V8, { 8: 10, 9: 11, 1: [2, 2], 10: $V9, 12: $Va, 14: $Vb, 16: $Vc, 18: $Vd, 19: $Ve }), o($V4, $V5, { 6: 18 }), o($V4, [2, 5]), { 4: 19, 20: $V1, 21: $V2, 22: $V3 }, { 11: [1, 20] }, { 13: [1, 21] }, { 15: [1, 22] }, { 17: [1, 23] }, o($V7, [2, 12]), o($V7, [2, 13]), o($V7, $V8, { 8: 10, 9: 11, 1: [2, 3], 10: $V9, 12: $Va, 14: $Vb, 16: $Vc, 18: $Vd, 19: $Ve }), o($V4, [2, 6]), o($V7, [2, 8]), o($V7, [2, 9]), o($V7, [2, 10]), o($V7, [2, 11])],\n    defaultActions: { 7: [2, 1] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            break;\n          case 1:\n            break;\n          case 2:\n            return 20;\n          case 3:\n            break;\n          case 4:\n            break;\n          case 5:\n            this.begin(\"title\");\n            return 12;\n          case 6:\n            this.popState();\n            return \"title_value\";\n          case 7:\n            this.begin(\"acc_title\");\n            return 14;\n          case 8:\n            this.popState();\n            return \"acc_title_value\";\n          case 9:\n            this.begin(\"acc_descr\");\n            return 16;\n          case 10:\n            this.popState();\n            return \"acc_descr_value\";\n          case 11:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 12:\n            this.popState();\n            break;\n          case 13:\n            return \"acc_descr_multiline_value\";\n          case 14:\n            this.begin(\"string\");\n            break;\n          case 15:\n            this.popState();\n            break;\n          case 16:\n            return \"txt\";\n          case 17:\n            return 5;\n          case 18:\n            return 7;\n          case 19:\n            return \"value\";\n          case 20:\n            return 22;\n        }\n      },\n      rules: [/^(?:%%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n\\r]+)/i, /^(?:%%[^\\n]*)/i, /^(?:[\\s]+)/i, /^(?:title\\b)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:[\"])/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:pie\\b)/i, /^(?:showData\\b)/i, /^(?::[\\s]*[\\d]+(?:\\.[\\d]+)?)/i, /^(?:$)/i],\n      conditions: { \"acc_descr_multiline\": { \"rules\": [12, 13], \"inclusive\": false }, \"acc_descr\": { \"rules\": [10], \"inclusive\": false }, \"acc_title\": { \"rules\": [8], \"inclusive\": false }, \"title\": { \"rules\": [6], \"inclusive\": false }, \"string\": { \"rules\": [15, 16], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 17, 18, 19, 20], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nconst DEFAULT_PIE_CONFIG = defaultConfig.pie;\nconst DEFAULT_PIE_DB = {\n  sections: {},\n  showData: false,\n  config: DEFAULT_PIE_CONFIG\n};\nlet sections = DEFAULT_PIE_DB.sections;\nlet showData = DEFAULT_PIE_DB.showData;\nconst config = structuredClone(DEFAULT_PIE_CONFIG);\nconst getConfig = () => structuredClone(config);\nconst clear = () => {\n  sections = structuredClone(DEFAULT_PIE_DB.sections);\n  showData = DEFAULT_PIE_DB.showData;\n  clear$1();\n};\nconst addSection = (label, value) => {\n  label = sanitizeText(label, getConfig$1());\n  if (sections[label] === void 0) {\n    sections[label] = value;\n    log.debug(`added new section: ${label}, with value: ${value}`);\n  }\n};\nconst getSections = () => sections;\nconst cleanupValue = (value) => {\n  if (value.substring(0, 1) === \":\") {\n    value = value.substring(1).trim();\n  }\n  return Number(value.trim());\n};\nconst setShowData = (toggle) => {\n  showData = toggle;\n};\nconst getShowData = () => showData;\nconst db = {\n  getConfig,\n  clear,\n  setDiagramTitle,\n  getDiagramTitle,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  addSection,\n  getSections,\n  cleanupValue,\n  setShowData,\n  getShowData\n};\nconst getStyles = (options) => `\n  .pieCircle{\n    stroke: ${options.pieStrokeColor};\n    stroke-width : ${options.pieStrokeWidth};\n    opacity : ${options.pieOpacity};\n  }\n  .pieOuterCircle{\n    stroke: ${options.pieOuterStrokeColor};\n    stroke-width: ${options.pieOuterStrokeWidth};\n    fill: none;\n  }\n  .pieTitleText {\n    text-anchor: middle;\n    font-size: ${options.pieTitleTextSize};\n    fill: ${options.pieTitleTextColor};\n    font-family: ${options.fontFamily};\n  }\n  .slice {\n    font-family: ${options.fontFamily};\n    fill: ${options.pieSectionTextColor};\n    font-size:${options.pieSectionTextSize};\n    // fill: white;\n  }\n  .legend text {\n    fill: ${options.pieLegendTextColor};\n    font-family: ${options.fontFamily};\n    font-size: ${options.pieLegendTextSize};\n  }\n`;\nconst styles = getStyles;\nconst createPieArcs = (sections2) => {\n  const pieData = Object.entries(sections2).map((element) => {\n    return {\n      label: element[0],\n      value: element[1]\n    };\n  }).sort((a, b) => {\n    return b.value - a.value;\n  });\n  const pie$1 = pie().value(\n    (d3Section) => d3Section.value\n  );\n  return pie$1(pieData);\n};\nconst draw = (text, id, _version, diagObj) => {\n  log.debug(\"rendering pie chart\\n\" + text);\n  const db2 = diagObj.db;\n  const globalConfig = getConfig$1();\n  const pieConfig = cleanAndMerge(db2.getConfig(), globalConfig.pie);\n  const MARGIN = 40;\n  const LEGEND_RECT_SIZE = 18;\n  const LEGEND_SPACING = 4;\n  const height = 450;\n  const pieWidth = height;\n  const svg = selectSvgElement(id);\n  const group = svg.append(\"g\");\n  const sections2 = db2.getSections();\n  group.attr(\"transform\", \"translate(\" + pieWidth / 2 + \",\" + height / 2 + \")\");\n  const { themeVariables } = globalConfig;\n  let [outerStrokeWidth] = parseFontSize(themeVariables.pieOuterStrokeWidth);\n  outerStrokeWidth ?? (outerStrokeWidth = 2);\n  const textPosition = pieConfig.textPosition;\n  const radius = Math.min(pieWidth, height) / 2 - MARGIN;\n  const arcGenerator = arc().innerRadius(0).outerRadius(radius);\n  const labelArcGenerator = arc().innerRadius(radius * textPosition).outerRadius(radius * textPosition);\n  group.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", radius + outerStrokeWidth / 2).attr(\"class\", \"pieOuterCircle\");\n  const arcs = createPieArcs(sections2);\n  const myGeneratedColors = [\n    themeVariables.pie1,\n    themeVariables.pie2,\n    themeVariables.pie3,\n    themeVariables.pie4,\n    themeVariables.pie5,\n    themeVariables.pie6,\n    themeVariables.pie7,\n    themeVariables.pie8,\n    themeVariables.pie9,\n    themeVariables.pie10,\n    themeVariables.pie11,\n    themeVariables.pie12\n  ];\n  const color = scaleOrdinal(myGeneratedColors);\n  group.selectAll(\"mySlices\").data(arcs).enter().append(\"path\").attr(\"d\", arcGenerator).attr(\"fill\", (datum) => {\n    return color(datum.data.label);\n  }).attr(\"class\", \"pieCircle\");\n  let sum = 0;\n  Object.keys(sections2).forEach((key) => {\n    sum += sections2[key];\n  });\n  group.selectAll(\"mySlices\").data(arcs).enter().append(\"text\").text((datum) => {\n    return (datum.data.value / sum * 100).toFixed(0) + \"%\";\n  }).attr(\"transform\", (datum) => {\n    return \"translate(\" + labelArcGenerator.centroid(datum) + \")\";\n  }).style(\"text-anchor\", \"middle\").attr(\"class\", \"slice\");\n  group.append(\"text\").text(db2.getDiagramTitle()).attr(\"x\", 0).attr(\"y\", -(height - 50) / 2).attr(\"class\", \"pieTitleText\");\n  const legend = group.selectAll(\".legend\").data(color.domain()).enter().append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", (_datum, index) => {\n    const height2 = LEGEND_RECT_SIZE + LEGEND_SPACING;\n    const offset = height2 * color.domain().length / 2;\n    const horizontal = 12 * LEGEND_RECT_SIZE;\n    const vertical = index * height2 - offset;\n    return \"translate(\" + horizontal + \",\" + vertical + \")\";\n  });\n  legend.append(\"rect\").attr(\"width\", LEGEND_RECT_SIZE).attr(\"height\", LEGEND_RECT_SIZE).style(\"fill\", color).style(\"stroke\", color);\n  legend.data(arcs).append(\"text\").attr(\"x\", LEGEND_RECT_SIZE + LEGEND_SPACING).attr(\"y\", LEGEND_RECT_SIZE - LEGEND_SPACING).text((datum) => {\n    const { label, value } = datum.data;\n    if (db2.getShowData()) {\n      return `${label} [${value}]`;\n    }\n    return label;\n  });\n  const longestTextWidth = Math.max(\n    ...legend.selectAll(\"text\").nodes().map((node) => (node == null ? void 0 : node.getBoundingClientRect().width) ?? 0)\n  );\n  const totalWidth = pieWidth + MARGIN + LEGEND_RECT_SIZE + LEGEND_SPACING + longestTextWidth;\n  svg.attr(\"viewBox\", `0 0 ${totalWidth} ${height}`);\n  configureSvgSize(svg, height, totalWidth, pieConfig.useMaxWidth);\n};\nconst renderer = { draw };\nconst diagram = {\n  parser: parser$1,\n  db,\n  renderer,\n  styles\n};\nexport {\n  diagram\n};\n"],"names":["parser","o","k","v","o2","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","parser2","trace","yy","symbols_","error","start","eol","PIE","document","showData","line","statement","txt","value","title","title_value","acc_title","acc_title_value","acc_descr","acc_descr_value","acc_descr_multiline_value","section","NEWLINE","EOF","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","setShowData","this","$","addSection","cleanupValue","trim","setDiagramTitle","setAccTitle","setAccDescription","substr","table","defaultActions","parseError","str","hash","recoverable","Error","parse","input","self","stack","tstack","vstack","lstack","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","symbol","state","action","r","p","len","newState","expected","token","yyval","pop","lex","Array","errStr","showPosition","join","text","match","loc","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","acc_descr_multiline","inclusive","string","INITIAL","Parser","parser$1","DEFAULT_PIE_CONFIG","defaultConfig","pie","DEFAULT_PIE_DB","sections","config","structuredClone","diagram","db","getConfig","clear","clear$1","getDiagramTitle","getAccTitle","getAccDescription","label","sanitizeText","getConfig$1","log","debug","getSections","substring","Number","toggle","getShowData","renderer","draw","id","_version","diagObj","log$1","db2","globalConfig","pieConfig","cleanAndMerge","LEGEND_RECT_SIZE","height","pieWidth","svg","selectSvgElement","group","append","sections2","attr","themeVariables","outerStrokeWidth","parseFontSize","pieOuterStrokeWidth","textPosition","radius","min","arcGenerator","arc","innerRadius","outerRadius","labelArcGenerator","arcs","pieData","entries","map","element","sort","a","b","d3Section","pie$1","createPieArcs","myGeneratedColors","pie1","pie2","pie3","pie4","pie5","pie6","pie7","pie8","pie9","pie10","pie11","pie12","color","scaleOrdinal","selectAll","data","enter","datum","sum","keys","forEach","key","toFixed","centroid","style","legend","domain","_datum","totalWidth","max","nodes","node","getBoundingClientRect","width","configureSvgSize","useMaxWidth","styles","pieStrokeColor","pieStrokeWidth","pieOpacity","pieOuterStrokeColor","pieTitleTextSize","pieTitleTextColor","fontFamily","pieSectionTextColor","pieSectionTextSize","pieLegendTextColor","pieLegendTextSize"],"mappings":"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","x_google_ignoreList":[0]}