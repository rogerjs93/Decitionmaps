import{l as t,o as e,I as a,g as r,x as n,d as i,E as s,i as l,b7 as o}from"./mermaid-C4x-Gd19.js";import{a as d}from"./createText-2e5e7dd3-B7Yg42jR.js";const h={extension:(e,a,r)=>{t.trace("Making markers for ",r),e.append("defs").append("marker").attr("id",r+"_"+a+"-extensionStart").attr("class","marker extension "+a).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 1,7 L18,13 V 1 Z"),e.append("defs").append("marker").attr("id",r+"_"+a+"-extensionEnd").attr("class","marker extension "+a).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 1,1 V 13 L18,7 Z")},composition:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-compositionStart").attr("class","marker composition "+e).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-compositionEnd").attr("class","marker composition "+e).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")},aggregation:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-aggregationStart").attr("class","marker aggregation "+e).attr("refX",18).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-aggregationEnd").attr("class","marker aggregation "+e).attr("refX",1).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")},dependency:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-dependencyStart").attr("class","marker dependency "+e).attr("refX",6).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 5,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",a+"_"+e+"-dependencyEnd").attr("class","marker dependency "+e).attr("refX",13).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L14,7 L9,1 Z")},lollipop:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-lollipopStart").attr("class","marker lollipop "+e).attr("refX",13).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","transparent").attr("cx",7).attr("cy",7).attr("r",6),t.append("defs").append("marker").attr("id",a+"_"+e+"-lollipopEnd").attr("class","marker lollipop "+e).attr("refX",1).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","transparent").attr("cx",7).attr("cy",7).attr("r",6)},point:(t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-pointEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",6).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-pointStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",4.5).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 5 L 10 10 L 10 0 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")},circle:(t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-circleEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",11).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-circleStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",-1).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")},cross:(t,e,a)=>{t.append("marker").attr("id",a+"_"+e+"-crossEnd").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",12).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0"),t.append("marker").attr("id",a+"_"+e+"-crossStart").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",-1).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0")},barb:(t,e,a)=>{t.append("defs").append("marker").attr("id",a+"_"+e+"-barbEnd").attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",14).attr("markerUnits","strokeWidth").attr("orient","auto").append("path").attr("d","M 19,7 L9,13 L14,7 L9,1 Z")}},c=(t,e,a,r)=>{e.forEach((e=>{h[e](t,a,r)}))};const y=(e,a,s,l)=>{let d=e||"";if("object"==typeof d&&(d=d[0]),n(r().flowchart.htmlLabels)){d=d.replace(/\\n|\n/g,"<br />"),t.debug("vertexText"+d);let e=function(t){const e=i(document.createElementNS("http://www.w3.org/2000/svg","foreignObject")),a=e.append("xhtml:div"),r=t.label,n=t.isNode?"nodeLabel":"edgeLabel";var s,l;return a.html('<span class="'+n+'" '+(t.labelStyle?'style="'+t.labelStyle+'"':"")+">"+r+"</span>"),s=a,(l=t.labelStyle)&&s.attr("style",l),a.style("display","inline-block"),a.style("white-space","nowrap"),a.attr("xmlns","http://www.w3.org/1999/xhtml"),e.node()}({isNode:l,label:o(d).replace(/fa[blrs]?:fa-[\w-]+/g,(t=>`<i class='${t.replace(":"," ")}'></i>`)),labelStyle:a.replace("fill:","color:")});return e}{const t=document.createElementNS("http://www.w3.org/2000/svg","text");t.setAttribute("style",a.replace("color:","fill:"));let e=[];e="string"==typeof d?d.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(d)?d:[];for(const a of e){const e=document.createElementNS("http://www.w3.org/2000/svg","tspan");e.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),e.setAttribute("dy","1em"),e.setAttribute("x","0"),s?e.setAttribute("class","title-row"):e.setAttribute("class","row"),e.textContent=a.trim(),t.appendChild(e)}return t}},p=async(t,e,a,s)=>{let h;const c=e.useHtmlLabels||n(r().flowchart.htmlLabels);h=a||"node default";const p=t.insert("g").attr("class",h).attr("id",e.domId||e.id),g=p.insert("g").attr("class","label").attr("style",e.labelStyle);let x;x=void 0===e.labelText?"":"string"==typeof e.labelText?e.labelText:e.labelText[0];const f=g.node();let u;u="markdown"===e.labelType?d(g,l(o(x),r()),{useHtmlLabels:c,width:e.width||r().flowchart.wrappingWidth,classes:"markdown-node-label"}):f.appendChild(y(l(o(x),r()),e.labelStyle,!1,s));let w=u.getBBox();const b=e.padding/2;if(n(r().flowchart.htmlLabels)){const t=u.children[0],e=i(u),a=t.getElementsByTagName("img");if(a){const t=""===x.replace(/<img[^>]*>/g,"").trim();await Promise.all([...a].map((e=>new Promise((a=>{function n(){if(e.style.display="flex",e.style.flexDirection="column",t){const t=r().fontSize?r().fontSize:window.getComputedStyle(document.body).fontSize,a=5,n=parseInt(t,10)*a+"px";e.style.minWidth=n,e.style.maxWidth=n}else e.style.width="100%";a(e)}setTimeout((()=>{e.complete&&n()})),e.addEventListener("error",n),e.addEventListener("load",n)})))))}w=t.getBoundingClientRect(),e.attr("width",w.width),e.attr("height",w.height)}return c?g.attr("transform","translate("+-w.width/2+", "+-w.height/2+")"):g.attr("transform","translate(0, "+-w.height/2+")"),e.centerLabel&&g.attr("transform","translate("+-w.width/2+", "+-w.height/2+")"),g.insert("rect",":first-child"),{shapeSvg:p,bbox:w,halfPadding:b,label:g}},g=(t,e)=>{const a=e.node().getBBox();t.width=a.width,t.height=a.height};function x(t,e,a,r){return t.insert("polygon",":first-child").attr("points",r.map((function(t){return t.x+","+t.y})).join(" ")).attr("class","label-container").attr("transform","translate("+-e/2+","+a/2+")")}function f(t,e,a,r){var n=t.x,i=t.y,s=n-r.x,l=i-r.y,o=Math.sqrt(e*e*l*l+a*a*s*s),d=Math.abs(e*a*s/o);r.x<n&&(d=-d);var h=Math.abs(e*a*l/o);return r.y<i&&(h=-h),{x:n+d,y:i+h}}function u(t,e,a,r){var n,i,s,l,o,d,h,c,y,p,g,x,f;if(n=e.y-t.y,s=t.x-e.x,o=e.x*t.y-t.x*e.y,y=n*a.x+s*a.y+o,p=n*r.x+s*r.y+o,!(0!==y&&0!==p&&w(y,p)||(i=r.y-a.y,l=a.x-r.x,d=r.x*a.y-a.x*r.y,h=i*t.x+l*t.y+d,c=i*e.x+l*e.y+d,0!==h&&0!==c&&w(h,c)||0===(g=n*l-i*s))))return x=Math.abs(g/2),{x:(f=s*d-l*o)<0?(f-x)/g:(f+x)/g,y:(f=i*o-n*d)<0?(f-x)/g:(f+x)/g}}function w(t,e){return t*e>0}const b=(t,e)=>{var a,r,n=t.x,i=t.y,s=e.x-n,l=e.y-i,o=t.width/2,d=t.height/2;return Math.abs(l)*o>Math.abs(s)*d?(l<0&&(d=-d),a=0===l?0:d*s/l,r=d):(s<0&&(o=-o),a=o,r=0===s?0:o*l/s),{x:n+a,y:i+r}},m={node:function(t,e){return t.intersect(e)},circle:function(t,e,a){return f(t,e,e,a)},ellipse:f,polygon:function(t,e,a){var r=t.x,n=t.y,i=[],s=Number.POSITIVE_INFINITY,l=Number.POSITIVE_INFINITY;"function"==typeof e.forEach?e.forEach((function(t){s=Math.min(s,t.x),l=Math.min(l,t.y)})):(s=Math.min(s,e.x),l=Math.min(l,e.y));for(var o=r-t.width/2-s,d=n-t.height/2-l,h=0;h<e.length;h++){var c=e[h],y=e[h<e.length-1?h+1:0],p=u(t,a,{x:o+c.x,y:d+c.y},{x:o+y.x,y:d+y.y});p&&i.push(p)}return i.length?(i.length>1&&i.sort((function(t,e){var r=t.x-a.x,n=t.y-a.y,i=Math.sqrt(r*r+n*n),s=e.x-a.x,l=e.y-a.y,o=Math.sqrt(s*s+l*l);return i<o?-1:i===o?0:1})),i[0]):t},rect:b},k=(t,e,a)=>{const r=(t=>{const e=new Set;for(const a of t)switch(a){case"x":e.add("right"),e.add("left");break;case"y":e.add("up"),e.add("down");break;default:e.add(a)}return e})(t),n=e.height+2*a.padding,i=n/2,s=e.width+2*i+a.padding,l=a.padding/2;return r.has("right")&&r.has("left")&&r.has("up")&&r.has("down")?[{x:0,y:0},{x:i,y:0},{x:s/2,y:2*l},{x:s-i,y:0},{x:s,y:0},{x:s,y:-n/3},{x:s+2*l,y:-n/2},{x:s,y:-2*n/3},{x:s,y:-n},{x:s-i,y:-n},{x:s/2,y:-n-2*l},{x:i,y:-n},{x:0,y:-n},{x:0,y:-2*n/3},{x:-2*l,y:-n/2},{x:0,y:-n/3}]:r.has("right")&&r.has("left")&&r.has("up")?[{x:i,y:0},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:i,y:-n},{x:0,y:-n/2}]:r.has("right")&&r.has("left")&&r.has("down")?[{x:0,y:0},{x:i,y:-n},{x:s-i,y:-n},{x:s,y:0}]:r.has("right")&&r.has("up")&&r.has("down")?[{x:0,y:0},{x:s,y:-i},{x:s,y:-n+i},{x:0,y:-n}]:r.has("left")&&r.has("up")&&r.has("down")?[{x:s,y:0},{x:0,y:-i},{x:0,y:-n+i},{x:s,y:-n}]:r.has("right")&&r.has("left")?[{x:i,y:0},{x:i,y:-l},{x:s-i,y:-l},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:s-i,y:-n+l},{x:i,y:-n+l},{x:i,y:-n},{x:0,y:-n/2}]:r.has("up")&&r.has("down")?[{x:s/2,y:0},{x:0,y:-l},{x:i,y:-l},{x:i,y:-n+l},{x:0,y:-n+l},{x:s/2,y:-n},{x:s,y:-n+l},{x:s-i,y:-n+l},{x:s-i,y:-l},{x:s,y:-l}]:r.has("right")&&r.has("up")?[{x:0,y:0},{x:s,y:-i},{x:0,y:-n}]:r.has("right")&&r.has("down")?[{x:0,y:0},{x:s,y:0},{x:0,y:-n}]:r.has("left")&&r.has("up")?[{x:s,y:0},{x:0,y:-i},{x:s,y:-n}]:r.has("left")&&r.has("down")?[{x:s,y:0},{x:0,y:0},{x:s,y:-n}]:r.has("right")?[{x:i,y:-l},{x:i,y:-l},{x:s-i,y:-l},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:s-i,y:-n+l},{x:i,y:-n+l},{x:i,y:-n+l}]:r.has("left")?[{x:i,y:0},{x:i,y:-l},{x:s-i,y:-l},{x:s-i,y:-n+l},{x:i,y:-n+l},{x:i,y:-n},{x:0,y:-n/2}]:r.has("up")?[{x:i,y:-l},{x:i,y:-n+l},{x:0,y:-n+l},{x:s/2,y:-n},{x:s,y:-n+l},{x:s-i,y:-n+l},{x:s-i,y:-l}]:r.has("down")?[{x:s/2,y:0},{x:0,y:-l},{x:i,y:-l},{x:i,y:-n+l},{x:s-i,y:-n+l},{x:s-i,y:-l},{x:s,y:-l}]:[{x:0,y:0}]},L=t=>t?" "+t:"",S=(t,e)=>`node default${L(t.classes)} ${L(t.class)}`,v=async(e,a)=>{const{shapeSvg:r,bbox:n}=await p(e,a,S(a),!0),i=n.width+a.padding+(n.height+a.padding),s=[{x:i/2,y:0},{x:i,y:-i/2},{x:i/2,y:-i},{x:0,y:-i/2}];t.info("Question main (Circle)");const l=x(r,i,i,s);return l.attr("style",a.style),g(a,l),a.intersect=function(e){return t.warn("Intersect called"),m.polygon(a,s,e)},r};function M(e,a,r,n){const i=[],s=t=>{i.push(t,0)},l=t=>{i.push(0,t)};a.includes("t")?(t.debug("add top border"),s(r)):l(r),a.includes("r")?(t.debug("add right border"),s(n)):l(n),a.includes("b")?(t.debug("add bottom border"),s(r)):l(r),a.includes("l")?(t.debug("add left border"),s(n)):l(n),e.attr("stroke-dasharray",i.join(" "))}const T=(t,e,a)=>{const r=t.insert("g").attr("class","node default").attr("id",e.domId||e.id);let n=70,i=10;"LR"===a&&(n=10,i=70);const s=r.append("rect").attr("x",-1*n/2).attr("y",-1*i/2).attr("width",n).attr("height",i).attr("class","fork-join");return g(e,s),e.height=e.height+e.padding/2,e.width=e.width+e.padding/2,e.intersect=function(t){return m.rect(e,t)},r},B={rhombus:v,composite:async(e,a)=>{const{shapeSvg:r,bbox:n,halfPadding:i}=await p(e,a,"node "+a.classes,!0),s=r.insert("rect",":first-child"),l=a.positioned?a.width:n.width+a.padding,o=a.positioned?a.height:n.height+a.padding,d=a.positioned?-l/2:-n.width/2-i,h=a.positioned?-o/2:-n.height/2-i;if(s.attr("class","basic cluster composite label-container").attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("x",d).attr("y",h).attr("width",l).attr("height",o),a.props){const e=new Set(Object.keys(a.props));a.props.borders&&(M(s,a.props.borders,l,o),e.delete("borders")),e.forEach((e=>{t.warn(`Unknown node property ${e}`)}))}return g(a,s),a.intersect=function(t){return m.rect(a,t)},r},question:v,rect:async(e,a)=>{const{shapeSvg:r,bbox:n,halfPadding:i}=await p(e,a,"node "+a.classes+" "+a.class,!0),s=r.insert("rect",":first-child"),l=a.positioned?a.width:n.width+a.padding,o=a.positioned?a.height:n.height+a.padding,d=a.positioned?-l/2:-n.width/2-i,h=a.positioned?-o/2:-n.height/2-i;if(s.attr("class","basic label-container").attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("x",d).attr("y",h).attr("width",l).attr("height",o),a.props){const e=new Set(Object.keys(a.props));a.props.borders&&(M(s,a.props.borders,l,o),e.delete("borders")),e.forEach((e=>{t.warn(`Unknown node property ${e}`)}))}return g(a,s),a.intersect=function(t){return m.rect(a,t)},r},labelRect:async(e,a)=>{const{shapeSvg:r}=await p(e,a,"label",!0);t.trace("Classes = ",a.class);const n=r.insert("rect",":first-child");if(n.attr("width",0).attr("height",0),r.attr("class","label edgeLabel"),a.props){const e=new Set(Object.keys(a.props));a.props.borders&&(M(n,a.props.borders,0,0),e.delete("borders")),e.forEach((e=>{t.warn(`Unknown node property ${e}`)}))}return g(a,n),a.intersect=function(t){return m.rect(a,t)},r},rectWithTitle:(e,a)=>{let s;s=a.classes?"node "+a.classes:"node default";const l=e.insert("g").attr("class",s).attr("id",a.domId||a.id),o=l.insert("rect",":first-child"),d=l.insert("line"),h=l.insert("g").attr("class","label"),c=a.labelText.flat?a.labelText.flat():a.labelText;let p="";p="object"==typeof c?c[0]:c,t.info("Label text abc79",p,c,"object"==typeof c);const x=h.node().appendChild(y(p,a.labelStyle,!0,!0));let f={width:0,height:0};if(n(r().flowchart.htmlLabels)){const t=x.children[0],e=i(x);f=t.getBoundingClientRect(),e.attr("width",f.width),e.attr("height",f.height)}t.info("Text 2",c);const u=c.slice(1,c.length);let w=x.getBBox();const b=h.node().appendChild(y(u.join?u.join("<br/>"):u,a.labelStyle,!0,!0));if(n(r().flowchart.htmlLabels)){const t=b.children[0],e=i(b);f=t.getBoundingClientRect(),e.attr("width",f.width),e.attr("height",f.height)}const k=a.padding/2;return i(b).attr("transform","translate( "+(f.width>w.width?0:(w.width-f.width)/2)+", "+(w.height+k+5)+")"),i(x).attr("transform","translate( "+(f.width<w.width?0:-(w.width-f.width)/2)+", 0)"),f=h.node().getBBox(),h.attr("transform","translate("+-f.width/2+", "+(-f.height/2-k+3)+")"),o.attr("class","outer title-state").attr("x",-f.width/2-k).attr("y",-f.height/2-k).attr("width",f.width+a.padding).attr("height",f.height+a.padding),d.attr("class","divider").attr("x1",-f.width/2-k).attr("x2",f.width/2+k).attr("y1",-f.height/2-k+w.height+k).attr("y2",-f.height/2-k+w.height+k),g(a,o),a.intersect=function(t){return m.rect(a,t)},l},choice:(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=[{x:0,y:14},{x:14,y:0},{x:0,y:-14},{x:-14,y:0}];return a.insert("polygon",":first-child").attr("points",r.map((function(t){return t.x+","+t.y})).join(" ")).attr("class","state-start").attr("r",7).attr("width",28).attr("height",28),e.width=28,e.height=28,e.intersect=function(t){return m.circle(e,14,t)},a},circle:async(e,a)=>{const{shapeSvg:r,bbox:n,halfPadding:i}=await p(e,a,S(a),!0),s=r.insert("circle",":first-child");return s.attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("r",n.width/2+i).attr("width",n.width+a.padding).attr("height",n.height+a.padding),t.info("Circle main"),g(a,s),a.intersect=function(e){return t.info("Circle intersect",a,n.width/2+i,e),m.circle(a,n.width/2+i,e)},r},doublecircle:async(e,a)=>{const{shapeSvg:r,bbox:n,halfPadding:i}=await p(e,a,S(a),!0),s=r.insert("g",":first-child"),l=s.insert("circle"),o=s.insert("circle");return s.attr("class",a.class),l.attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("r",n.width/2+i+5).attr("width",n.width+a.padding+10).attr("height",n.height+a.padding+10),o.attr("style",a.style).attr("rx",a.rx).attr("ry",a.ry).attr("r",n.width/2+i).attr("width",n.width+a.padding).attr("height",n.height+a.padding),t.info("DoubleCircle main"),g(a,l),a.intersect=function(e){return t.info("DoubleCircle intersect",a,n.width/2+i+5,e),m.circle(a,n.width/2+i+5,e)},r},stadium:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.height+e.padding,i=r.width+n/4+e.padding,s=a.insert("rect",":first-child").attr("style",e.style).attr("rx",n/2).attr("ry",n/2).attr("x",-i/2).attr("y",-n/2).attr("width",i).attr("height",n);return g(e,s),e.intersect=function(t){return m.rect(e,t)},a},hexagon:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.height+e.padding,i=n/4,s=r.width+2*i+e.padding,l=[{x:i,y:0},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:i,y:-n},{x:0,y:-n/2}],o=x(a,s,n,l);return o.attr("style",e.style),g(e,o),e.intersect=function(t){return m.polygon(e,l,t)},a},block_arrow:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,void 0,!0),n=r.height+2*e.padding,i=n/2,s=r.width+2*i+e.padding,l=k(e.directions,r,e),o=x(a,s,n,l);return o.attr("style",e.style),g(e,o),e.intersect=function(t){return m.polygon(e,l,t)},a},rect_left_inv_arrow:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-i/2,y:0},{x:n,y:0},{x:n,y:-i},{x:-i/2,y:-i},{x:0,y:-i/2}];return x(a,n,i,s).attr("style",e.style),e.width=n+i,e.height=i,e.intersect=function(t){return m.polygon(e,s,t)},a},lean_right:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-2*i/6,y:0},{x:n-i/6,y:0},{x:n+2*i/6,y:-i},{x:i/6,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},lean_left:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:2*i/6,y:0},{x:n+i/6,y:0},{x:n-2*i/6,y:-i},{x:-i/6,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},trapezoid:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-2*i/6,y:0},{x:n+2*i/6,y:0},{x:n-i/6,y:-i},{x:i/6,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},inv_trapezoid:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:i/6,y:0},{x:n-i/6,y:0},{x:n+2*i/6,y:-i},{x:-2*i/6,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},rect_right_inv_arrow:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:0,y:0},{x:n+i/2,y:0},{x:n,y:-i/2},{x:n+i/2,y:-i},{x:0,y:-i}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},cylinder:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=n/2,s=i/(2.5+n/50),l=r.height+s+e.padding,o="M 0,"+s+" a "+i+","+s+" 0,0,0 "+n+" 0 a "+i+","+s+" 0,0,0 "+-n+" 0 l 0,"+l+" a "+i+","+s+" 0,0,0 "+n+" 0 l 0,"+-l,d=a.attr("label-offset-y",s).insert("path",":first-child").attr("style",e.style).attr("d",o).attr("transform","translate("+-n/2+","+-(l/2+s)+")");return g(e,d),e.intersect=function(t){const a=m.rect(e,t),r=a.x-e.x;if(0!=i&&(Math.abs(r)<e.width/2||Math.abs(r)==e.width/2&&Math.abs(a.y-e.y)>e.height/2-s)){let n=s*s*(1-r*r/(i*i));0!=n&&(n=Math.sqrt(n)),n=s-n,t.y-e.y>0&&(n=-n),a.y+=n}return a},a},start:(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child");return r.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),g(e,r),e.intersect=function(t){return m.circle(e,7,t)},a},end:(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child"),n=a.insert("circle",":first-child");return n.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),r.attr("class","state-end").attr("r",5).attr("width",10).attr("height",10),g(e,n),e.intersect=function(t){return m.circle(e,7,t)},a},note:async(e,a)=>{a.useHtmlLabels||r().flowchart.htmlLabels||(a.centerLabel=!0);const{shapeSvg:n,bbox:i,halfPadding:s}=await p(e,a,"node "+a.classes,!0);t.info("Classes = ",a.classes);const l=n.insert("rect",":first-child");return l.attr("rx",a.rx).attr("ry",a.ry).attr("x",-i.width/2-s).attr("y",-i.height/2-s).attr("width",i.width+a.padding).attr("height",i.height+a.padding),g(a,l),a.intersect=function(t){return m.rect(a,t)},n},subroutine:async(t,e)=>{const{shapeSvg:a,bbox:r}=await p(t,e,S(e),!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:0,y:0},{x:n,y:0},{x:n,y:-i},{x:0,y:-i},{x:0,y:0},{x:-8,y:0},{x:n+8,y:0},{x:n+8,y:-i},{x:-8,y:-i},{x:-8,y:0}],l=x(a,n,i,s);return l.attr("style",e.style),g(e,l),e.intersect=function(t){return m.polygon(e,s,t)},a},fork:T,join:T,class_box:(t,e)=>{const a=e.padding/2;let s;s=e.classes?"node "+e.classes:"node default";const l=t.insert("g").attr("class",s).attr("id",e.domId||e.id),o=l.insert("rect",":first-child"),d=l.insert("line"),h=l.insert("line");let c=0,p=4;const x=l.insert("g").attr("class","label");let f=0;const u=e.classData.annotations&&e.classData.annotations[0],w=e.classData.annotations[0]?"«"+e.classData.annotations[0]+"»":"",b=x.node().appendChild(y(w,e.labelStyle,!0,!0));let k=b.getBBox();if(n(r().flowchart.htmlLabels)){const t=b.children[0],e=i(b);k=t.getBoundingClientRect(),e.attr("width",k.width),e.attr("height",k.height)}e.classData.annotations[0]&&(p+=k.height+4,c+=k.width);let L=e.classData.label;void 0!==e.classData.type&&""!==e.classData.type&&(r().flowchart.htmlLabels?L+="&lt;"+e.classData.type+"&gt;":L+="<"+e.classData.type+">");const S=x.node().appendChild(y(L,e.labelStyle,!0,!0));i(S).attr("class","classTitle");let v=S.getBBox();if(n(r().flowchart.htmlLabels)){const t=S.children[0],e=i(S);v=t.getBoundingClientRect(),e.attr("width",v.width),e.attr("height",v.height)}p+=v.height+4,v.width>c&&(c=v.width);const M=[];e.classData.members.forEach((t=>{const a=t.getDisplayDetails();let s=a.displayText;r().flowchart.htmlLabels&&(s=s.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const l=x.node().appendChild(y(s,a.cssStyle?a.cssStyle:e.labelStyle,!0,!0));let o=l.getBBox();if(n(r().flowchart.htmlLabels)){const t=l.children[0],e=i(l);o=t.getBoundingClientRect(),e.attr("width",o.width),e.attr("height",o.height)}o.width>c&&(c=o.width),p+=o.height+4,M.push(l)})),p+=8;const T=[];if(e.classData.methods.forEach((t=>{const a=t.getDisplayDetails();let s=a.displayText;r().flowchart.htmlLabels&&(s=s.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const l=x.node().appendChild(y(s,a.cssStyle?a.cssStyle:e.labelStyle,!0,!0));let o=l.getBBox();if(n(r().flowchart.htmlLabels)){const t=l.children[0],e=i(l);o=t.getBoundingClientRect(),e.attr("width",o.width),e.attr("height",o.height)}o.width>c&&(c=o.width),p+=o.height+4,T.push(l)})),p+=8,u){let t=(c-k.width)/2;i(b).attr("transform","translate( "+(-1*c/2+t)+", "+-1*p/2+")"),f=k.height+4}let B=(c-v.width)/2;return i(S).attr("transform","translate( "+(-1*c/2+B)+", "+(-1*p/2+f)+")"),f+=v.height+4,d.attr("class","divider").attr("x1",-c/2-a).attr("x2",c/2+a).attr("y1",-p/2-a+8+f).attr("y2",-p/2-a+8+f),f+=8,M.forEach((t=>{i(t).attr("transform","translate( "+-c/2+", "+(-1*p/2+f+4)+")");const e=null==t?void 0:t.getBBox();f+=((null==e?void 0:e.height)??0)+4})),f+=8,h.attr("class","divider").attr("x1",-c/2-a).attr("x2",c/2+a).attr("y1",-p/2-a+8+f).attr("y2",-p/2-a+8+f),f+=8,T.forEach((t=>{i(t).attr("transform","translate( "+-c/2+", "+(-1*p/2+f)+")");const e=null==t?void 0:t.getBBox();f+=((null==e?void 0:e.height)??0)+4})),o.attr("style",e.style).attr("class","outer title-state").attr("x",-c/2-a).attr("y",-p/2-a).attr("width",c+e.padding).attr("height",p+e.padding),g(e,o),e.intersect=function(t){return m.rect(e,t)},l}};let _={};const C=async(t,e,a)=>{let n,i;if(e.link){let s;"sandbox"===r().securityLevel?s="_top":e.linkTarget&&(s=e.linkTarget||"_blank"),n=t.insert("svg:a").attr("xlink:href",e.link).attr("target",s),i=await B[e.shape](n,e,a)}else i=await B[e.shape](t,e,a),n=i;return e.tooltip&&i.attr("title",e.tooltip),e.class&&i.attr("class","node default "+e.class),n.attr("data-node","true"),n.attr("data-id",e.id),_[e.id]=n,e.haveCallback&&_[e.id].attr("class",_[e.id].attr("class")+" clickable"),n},E=(t,e)=>{_[e.id]=t},$=()=>{_={}},P=e=>{const a=_[e.id];t.trace("Transforming node",e.diff,e,"translate("+(e.x-e.width/2-5)+", "+e.width/2+")");const r=e.diff||0;return e.clusterNode?a.attr("transform","translate("+(e.x+r-e.width/2)+", "+(e.y-e.height/2-8)+")"):a.attr("transform","translate("+e.x+", "+e.y+")"),r},R=({flowchart:t})=>{var e,a;const r=(null==(e=null==t?void 0:t.subGraphTitleMargin)?void 0:e.top)??0,n=(null==(a=null==t?void 0:t.subGraphTitleMargin)?void 0:a.bottom)??0;return{subGraphTitleTopMargin:r,subGraphTitleBottomMargin:n,subGraphTitleTotalMargin:r+n}},Y={aggregation:18,extension:18,composition:18,dependency:6,lollipop:13.5,arrow_point:5.3};function I(t,e){if(void 0===t||void 0===e)return{angle:0,deltaX:0,deltaY:0};t=O(t),e=O(e);const[a,r]=[t.x,t.y],[n,i]=[e.x,e.y],s=n-a,l=i-r;return{angle:Math.atan(l/s),deltaX:s,deltaY:l}}const O=t=>Array.isArray(t)?{x:t[0],y:t[1]}:t,W=t=>({x:function(e,a,r){let n=0;if(0===a&&Object.hasOwn(Y,t.arrowTypeStart)){const{angle:e,deltaX:a}=I(r[0],r[1]);n=Y[t.arrowTypeStart]*Math.cos(e)*(a>=0?1:-1)}else if(a===r.length-1&&Object.hasOwn(Y,t.arrowTypeEnd)){const{angle:e,deltaX:a}=I(r[r.length-1],r[r.length-2]);n=Y[t.arrowTypeEnd]*Math.cos(e)*(a>=0?1:-1)}return O(e).x+n},y:function(e,a,r){let n=0;if(0===a&&Object.hasOwn(Y,t.arrowTypeStart)){const{angle:e,deltaY:a}=I(r[0],r[1]);n=Y[t.arrowTypeStart]*Math.abs(Math.sin(e))*(a>=0?1:-1)}else if(a===r.length-1&&Object.hasOwn(Y,t.arrowTypeEnd)){const{angle:e,deltaY:a}=I(r[r.length-1],r[r.length-2]);n=Y[t.arrowTypeEnd]*Math.abs(Math.sin(e))*(a>=0?1:-1)}return O(e).y+n}}),X=(t,e,a,r,n)=>{e.arrowTypeStart&&H(t,"start",e.arrowTypeStart,a,r,n),e.arrowTypeEnd&&H(t,"end",e.arrowTypeEnd,a,r,n)},j={arrow_cross:"cross",arrow_point:"point",arrow_barb:"barb",arrow_circle:"circle",aggregation:"aggregation",extension:"extension",composition:"composition",dependency:"dependency",lollipop:"lollipop"},H=(e,a,r,n,i,s)=>{const l=j[r];if(!l)return void t.warn(`Unknown arrow type: ${r}`);const o="start"===a?"Start":"End";e.attr(`marker-${a}`,`url(${n}#${i}_${s}-${l}${o})`)};let D={},N={};const U=()=>{D={},N={}},A=(t,e)=>{const a=n(r().flowchart.htmlLabels),s="markdown"===e.labelType?d(t,e.label,{style:e.labelStyle,useHtmlLabels:a,addSvgBackground:!0}):y(e.label,e.labelStyle),l=t.insert("g").attr("class","edgeLabel"),o=l.insert("g").attr("class","label");o.node().appendChild(s);let h,c=s.getBBox();if(a){const t=s.children[0],e=i(s);c=t.getBoundingClientRect(),e.attr("width",c.width),e.attr("height",c.height)}if(o.attr("transform","translate("+-c.width/2+", "+-c.height/2+")"),D[e.id]=l,e.width=c.width,e.height=c.height,e.startLabelLeft){const a=y(e.startLabelLeft,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),n=r.insert("g").attr("class","inner");h=n.node().appendChild(a);const i=a.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),N[e.id]||(N[e.id]={}),N[e.id].startLeft=r,Z(h,e.startLabelLeft)}if(e.startLabelRight){const a=y(e.startLabelRight,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),n=r.insert("g").attr("class","inner");h=r.node().appendChild(a),n.node().appendChild(a);const i=a.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),N[e.id]||(N[e.id]={}),N[e.id].startRight=r,Z(h,e.startLabelRight)}if(e.endLabelLeft){const a=y(e.endLabelLeft,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),n=r.insert("g").attr("class","inner");h=n.node().appendChild(a);const i=a.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),r.node().appendChild(a),N[e.id]||(N[e.id]={}),N[e.id].endLeft=r,Z(h,e.endLabelLeft)}if(e.endLabelRight){const a=y(e.endLabelRight,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),n=r.insert("g").attr("class","inner");h=n.node().appendChild(a);const i=a.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),r.node().appendChild(a),N[e.id]||(N[e.id]={}),N[e.id].endRight=r,Z(h,e.endLabelRight)}return s};function Z(t,e){r().flowchart.htmlLabels&&t&&(t.style.width=9*e.length+"px",t.style.height="12px")}const z=(e,a)=>{t.debug("Moving label abc88 ",e.id,e.label,D[e.id],a);let n=a.updatedPath?a.updatedPath:a.originalPath;const i=r(),{subGraphTitleTotalMargin:l}=R(i);if(e.label){const r=D[e.id];let i=e.x,o=e.y;if(n){const r=s.calcLabelPosition(n);t.debug("Moving label "+e.label+" from (",i,",",o,") to (",r.x,",",r.y,") abc88"),a.updatedPath&&(i=r.x,o=r.y)}r.attr("transform",`translate(${i}, ${o+l/2})`)}if(e.startLabelLeft){const t=N[e.id].startLeft;let a=e.x,r=e.y;if(n){const t=s.calcTerminalLabelPosition(e.arrowTypeStart?10:0,"start_left",n);a=t.x,r=t.y}t.attr("transform",`translate(${a}, ${r})`)}if(e.startLabelRight){const t=N[e.id].startRight;let a=e.x,r=e.y;if(n){const t=s.calcTerminalLabelPosition(e.arrowTypeStart?10:0,"start_right",n);a=t.x,r=t.y}t.attr("transform",`translate(${a}, ${r})`)}if(e.endLabelLeft){const t=N[e.id].endLeft;let a=e.x,r=e.y;if(n){const t=s.calcTerminalLabelPosition(e.arrowTypeEnd?10:0,"end_left",n);a=t.x,r=t.y}t.attr("transform",`translate(${a}, ${r})`)}if(e.endLabelRight){const t=N[e.id].endRight;let a=e.x,r=e.y;if(n){const t=s.calcTerminalLabelPosition(e.arrowTypeEnd?10:0,"end_right",n);a=t.x,r=t.y}t.attr("transform",`translate(${a}, ${r})`)}},q=(e,a)=>{t.debug("abc88 cutPathAtIntersect",e,a);let r=[],n=e[0],i=!1;return e.forEach((e=>{if(((t,e)=>{const a=t.x,r=t.y,n=Math.abs(e.x-a),i=Math.abs(e.y-r),s=t.width/2,l=t.height/2;return n>=s||i>=l})(a,e)||i)n=e,i||r.push(e);else{const s=((e,a,r)=>{t.debug(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(a)}\n  insidePoint : ${JSON.stringify(r)}\n  node        : x:${e.x} y:${e.y} w:${e.width} h:${e.height}`);const n=e.x,i=e.y,s=Math.abs(n-r.x),l=e.width/2;let o=r.x<a.x?l-s:l+s;const d=e.height/2,h=Math.abs(a.y-r.y),c=Math.abs(a.x-r.x);if(Math.abs(i-a.y)*l>Math.abs(n-a.x)*d){let e=r.y<a.y?a.y-d-i:i-d-a.y;o=c*e/h;const n={x:r.x<a.x?r.x+o:r.x-c+o,y:r.y<a.y?r.y+h-e:r.y-h+e};return 0===o&&(n.x=a.x,n.y=a.y),0===c&&(n.x=a.x),0===h&&(n.y=a.y),t.debug(`abc89 topp/bott calc, Q ${h}, q ${e}, R ${c}, r ${o}`,n),n}{o=r.x<a.x?a.x-l-n:n-l-a.x;let e=h*o/c,i=r.x<a.x?r.x+c-o:r.x-c+o,s=r.y<a.y?r.y+e:r.y-e;return t.debug(`sides calc abc89, Q ${h}, q ${e}, R ${c}, r ${o}`,{_x:i,_y:s}),0===o&&(i=a.x,s=a.y),0===c&&(i=a.x),0===h&&(s=a.y),{x:i,y:s}}})(a,n,e);let l=!1;r.forEach((t=>{l=l||t.x===s.x&&t.y===s.y})),r.some((t=>t.x===s.x&&t.y===s.y))||r.push(s),i=!0}})),r},G=function(n,i,s,l,o,d,h){let c=s.points;t.debug("abc88 InsertEdge: edge=",s,"e=",i);let y=!1;const p=d.node(i.v);var g=d.node(i.w);(null==g?void 0:g.intersect)&&(null==p?void 0:p.intersect)&&(c=c.slice(1,s.points.length-1),c.unshift(p.intersect(c[0])),c.push(g.intersect(c[c.length-1]))),s.toCluster&&(t.debug("to cluster abc88",l[s.toCluster]),c=q(s.points,l[s.toCluster].node),y=!0),s.fromCluster&&(t.debug("from cluster abc88",l[s.fromCluster]),c=q(c.reverse(),l[s.fromCluster].node).reverse(),y=!0);const x=c.filter((t=>!Number.isNaN(t.y)));let f=a;!s.curve||"graph"!==o&&"flowchart"!==o||(f=s.curve);const{x:u,y:w}=W(s),b=e().x(u).y(w).curve(f);let m;switch(s.thickness){case"normal":m="edge-thickness-normal";break;case"thick":case"invisible":m="edge-thickness-thick";break;default:m=""}switch(s.pattern){case"solid":m+=" edge-pattern-solid";break;case"dotted":m+=" edge-pattern-dotted";break;case"dashed":m+=" edge-pattern-dashed"}const k=n.append("path").attr("d",b(x)).attr("id",s.id).attr("class"," "+m+(s.classes?" "+s.classes:"")).attr("style",s.style);let L="";(r().flowchart.arrowMarkerAbsolute||r().state.arrowMarkerAbsolute)&&(L=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,L=L.replace(/\(/g,"\\("),L=L.replace(/\)/g,"\\)")),X(k,s,L,h,o);let S={};return y&&(S.updatedPath=c),S.originalPath=s.points,S};export{C as a,A as b,G as c,z as d,b as e,y as f,R as g,$ as h,c as i,U as j,W as k,p as l,X as m,P as p,E as s,g as u};
//# sourceMappingURL=edges-e0da2a9e-enACNHHc.js.map
