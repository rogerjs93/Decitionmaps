{"version":3,"mappings":"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","names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","Header","jsx","CategoryList","categories","onSelectCategory","category","MAX_RETRIES","RETRY_DELAY","MapRenderer","diagram","isLoading","setIsLoading","useState","error","setError","retryCount","setRetryCount","elementRef","useRef","renderRef","mermaidRef","initializeMermaid","mermaid","__vitePreload","err","renderDiagram","retryAttempt","resolve","uniqueId","container","svg","svgContainer","useEffect","mounted","cleanup","jsxs","MapPreview","map","onDownload","onShare","isVisible","setIsVisible","timer","MapGallery","maps","App","selectedCategory","setSelectedCategory","conceptualMaps","filteredMaps","handleDownload","handleShare","StrictMode"],"ignoreList":[0,1,2],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/Header.jsx","../../src/components/CategoryList.jsx","../../src/components/MapRenderer.jsx","../../src/components/MapPreview.jsx","../../src/components/MapGallery.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <h1>Conceptual Maps</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './CategoryList.css';\r\n\r\nconst CategoryList = ({ categories, onSelectCategory }) => {\r\n  return (\r\n    <div className=\"category-list\">\r\n      {categories.map((category) => (\r\n        <button\r\n          key={category}\r\n          className=\"category-button\"\r\n          onClick={() => onSelectCategory(category)}\r\n        >\r\n          {category}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './MapRenderer.css';\r\n\r\nconst MAX_RETRIES = 3;\r\nconst RETRY_DELAY = 1000;\r\n\r\nconst MapRenderer = ({ diagram }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const elementRef = useRef(null);\r\n  const renderRef = useRef(null);\r\n  const mermaidRef = useRef(null);\r\n\r\n  const initializeMermaid = async () => {\r\n    try {\r\n      console.log('Initializing Mermaid...');\r\n      if (!mermaidRef.current) {\r\n        const { default: mermaid } = await import('mermaid');\r\n        console.log('Mermaid imported successfully');\r\n          mermaid.initialize({\r\n          startOnLoad: false,\r\n          theme: 'default',\r\n          securityLevel: 'loose',\r\n          flowchart: {\r\n            useMaxWidth: true,\r\n            htmlLabels: true,\r\n            curve: 'basis',\r\n            nodeSpacing: 50,\r\n            rankSpacing: 50\r\n          },\r\n          sequence: { useMaxWidth: true },\r\n          gantt: { useMaxWidth: true },\r\n          fontSize: 16,\r\n          fontFamily: 'Arial',\r\n          maxTextSize: 50000,\r\n          logLevel: 'debug'\r\n        });\r\n        mermaidRef.current = mermaid;\r\n      }\r\n      return mermaidRef.current;\r\n    } catch (err) {\r\n      console.error('Mermaid initialization error:', err);\r\n      throw err;\r\n    }\r\n  };\r\n  const renderDiagram = async (retryAttempt = 0) => {\r\n    if (!diagram || !elementRef.current) {\r\n      console.log('No diagram or element ref available');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Starting diagram render attempt:', retryAttempt + 1);\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Wait a moment for any previous renders to complete\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n\r\n      // Clear previous content\r\n      elementRef.current.innerHTML = '';\r\n      console.log('Cleared previous content');\r\n\r\n      // Create a unique ID for this render attempt\r\n      const uniqueId = `mermaid-${Date.now()}-${Math.random().toString(36).slice(2)}`;\r\n      \r\n      // Create container for the diagram\r\n      const container = document.createElement('div');\r\n      container.id = uniqueId;\r\n      container.className = 'mermaid';\r\n      container.textContent = diagram;\r\n      elementRef.current.appendChild(container);\r\n      console.log('Created new container with ID:', uniqueId);\r\n\r\n      // Initialize mermaid if not already initialized\r\n      const mermaid = await initializeMermaid();\r\n      console.log('Mermaid initialized');\r\n\r\n      // Cancel any previous render attempts\r\n      if (renderRef.current) {\r\n        clearTimeout(renderRef.current);\r\n      }\r\n\r\n      // Add a slight delay to ensure the DOM is ready\r\n      renderRef.current = setTimeout(async () => {\r\n        try {          console.log('Attempting to parse diagram');\r\n          await mermaid.parse(diagram);\r\n          console.log('Diagram parsed successfully');\r\n          \r\n          // Force a new render context\r\n          const { svg } = await mermaid.render(container.id, diagram);\r\n          \r\n          // Create a new container for the SVG to avoid any stale references\r\n          const svgContainer = document.createElement('div');\r\n          svgContainer.innerHTML = svg;\r\n          \r\n          // Replace the original container with the rendered SVG\r\n          container.replaceWith(svgContainer.firstChild);\r\n          \r\n          setIsLoading(false);\r\n          setRetryCount(0);\r\n          console.log('Render complete');\r\n        } catch (err) {\r\n          console.error('Render error:', err);\r\n          \r\n          if (retryAttempt < MAX_RETRIES) {\r\n            console.log('Retrying render...');\r\n            setTimeout(() => {\r\n              setRetryCount(retryAttempt + 1);\r\n              renderDiagram(retryAttempt + 1);\r\n            }, RETRY_DELAY);\r\n          } else {\r\n            setError(`Failed to render diagram after ${MAX_RETRIES} attempts. ${err.message || ''}`);\r\n            setIsLoading(false);\r\n          }\r\n        }\r\n      }, 100);\r\n    } catch (err) {\r\n      console.error('Setup error:', err);\r\n      setError(`Failed to setup diagram: ${err.message || 'Unknown error'}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const cleanup = () => {\r\n      mounted = false;\r\n      if (renderRef.current) {\r\n        clearTimeout(renderRef.current);\r\n      }\r\n    };\r\n\r\n    if (mounted && diagram) {\r\n      console.log('Diagram changed, starting new render');\r\n      renderDiagram(retryCount);\r\n    }\r\n\r\n    return cleanup;\r\n  }, [diagram, retryCount]);\r\n\r\n  return (\r\n    <div className=\"diagram-wrapper\">\r\n      {isLoading && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading diagram{retryCount > 0 ? ` (Attempt ${retryCount + 1}/${MAX_RETRIES})` : ''}...</p>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n          <button onClick={() => {\r\n            setRetryCount(0);\r\n            renderDiagram(0);\r\n          }}>\r\n            Retry\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div ref={elementRef} className=\"diagram-container\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapRenderer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './MapPreview.css';\r\nimport MapRenderer from './MapRenderer';\r\n\r\nconst MapPreview = ({ map, onDownload, onShare }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Reset visibility when diagram changes\r\n    setIsVisible(false);\r\n    // Small delay to ensure component re-renders\r\n    const timer = setTimeout(() => {\r\n      setIsVisible(true);\r\n    }, 100);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [map.diagram]);\r\n\r\n  return (\r\n    <div className=\"map-preview\">\r\n      <h3>{map.title}</h3>\r\n      <div className=\"map-container\">\r\n        {!isVisible ? (\r\n          <div className=\"loading-indicator\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Preparing diagram...</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"diagram-content\">\r\n            {map.diagram ? (\r\n              <MapRenderer diagram={map.diagram} />\r\n            ) : map.image ? (\r\n              <img\r\n                src={map.image}\r\n                alt={map.title}\r\n                className=\"map-image\"\r\n                onLoad={() => setIsVisible(true)}\r\n              />\r\n            ) : (\r\n              <div className=\"error-message\">No diagram or image available</div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"map-actions\">\r\n        <button onClick={() => onDownload(map)}>Download</button>\r\n        <button onClick={() => onShare(map)}>Share</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPreview;\r\n","import React from 'react';\r\nimport MapPreview from './MapPreview';\r\nimport './MapGallery.css';\r\n\r\nconst MapGallery = ({ maps, onDownload, onShare }) => {\r\n  return (\r\n    <div className=\"map-gallery\">\r\n      {maps.map((map) => (\r\n        <MapPreview\r\n          key={map.id}\r\n          map={map}\r\n          onDownload={onDownload}\r\n          onShare={onShare}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapGallery;\r\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport CategoryList from './components/CategoryList';\nimport MapGallery from './components/MapGallery';\nimport conceptualMaps from './data/conceptualMaps.json';\nimport './App.css';\n\nconst App = () => {\n  const [selectedCategory, setSelectedCategory] = useState('All');\n\n  const categories = Object.keys(conceptualMaps);\n  const maps =\n    selectedCategory === 'All'\n      ? Object.values(conceptualMaps).flat()\n      : conceptualMaps[selectedCategory];\n\n  const filteredMaps =\n    selectedCategory === 'All'\n      ? maps\n      : maps.filter((map) => map.category === selectedCategory);\n\n  const handleDownload = (map) => {\n    console.log(`Downloading ${map.title}`);\n  };\n\n  const handleShare = (map) => {\n    console.log(`Sharing ${map.title}`);\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <CategoryList\n        categories={categories}\n        onSelectCategory={setSelectedCategory}\n      />\n      <MapGallery\n        maps={filteredMaps}\n        onDownload={handleDownload}\n        onShare={handleShare}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"file":"assets/index-BYFPPILI.js"}