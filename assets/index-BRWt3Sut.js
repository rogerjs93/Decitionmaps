import{r as e,a as n}from"./vendor-liIMdADX.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver((e=>{for(const r of e)if("childList"===r.type)for(const e of r.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&n(e)})).observe(document,{childList:!0,subtree:!0})}function n(e){if(e.ep)return;e.ep=!0;const n=function(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?n.credentials="include":"anonymous"===e.crossOrigin?n.credentials="omit":n.credentials="same-origin",n}(e);fetch(e.href,n)}}();var r={exports:{}},o={},a=e,s=Symbol.for("react.element"),t=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,l=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,r){var o,a={},t=null,d=null;for(o in void 0!==r&&(t=""+r),void 0!==n.key&&(t=""+n.key),void 0!==n.ref&&(d=n.ref),n)i.call(n,o)&&!c.hasOwnProperty(o)&&(a[o]=n[o]);if(e&&e.defaultProps)for(o in n=e.defaultProps)void 0===a[o]&&(a[o]=n[o]);return{$$typeof:s,type:e,key:t,ref:d,props:a,_owner:l.current}}o.Fragment=t,o.jsx=d,o.jsxs=d,r.exports=o;var m,u=r.exports,p=n;m=p.createRoot,p.hydrateRoot;const h=()=>u.jsx("header",{className:"app-header",children:u.jsx("h1",{children:"Conceptual Maps"})}),y=({categories:e,onSelectCategory:n})=>u.jsx("div",{className:"category-list",children:e.map((e=>u.jsx("button",{className:"category-button",onClick:()=>n(e),children:e},e)))}),f=({diagram:n})=>{const r=e.useRef(null);return e.useEffect((()=>{if(n&&r.current)try{r.current.innerHTML="";const e=document.createElement("div");e.className="mermaid",e.textContent=n,r.current.appendChild(e),window.mermaid.init()}catch(e){console.error("Error rendering diagram:",e),r.current.innerHTML='\n        <div class="error-message">\n          <p>Failed to render diagram</p>\n          <button onclick="window.location.reload()">Retry</button>\n        </div>\n      '}}),[n]),u.jsx("div",{ref:r,className:"diagram-container"})},g=({map:n,onDownload:r,onShare:o})=>{const[a,s]=e.useState(!0);e.useEffect((()=>{s(!0)}),[n.diagram]);const t=()=>{s(!1)};return u.jsxs("div",{className:"map-preview",children:[u.jsx("h3",{children:n.title}),u.jsxs("div",{className:"map-container",children:[a&&u.jsxs("div",{className:"loading-indicator",children:[u.jsx("div",{className:"loading-spinner"}),u.jsx("p",{children:"Loading diagram..."})]}),u.jsx("div",{style:{opacity:a?0:1},children:n.diagram?u.jsx(f,{diagram:n.diagram,onRendered:t}):n.image?u.jsx("img",{src:n.image,alt:n.title,className:"map-image",onLoad:t}):u.jsx("div",{className:"error-message",children:"No diagram or image available"})})]}),u.jsxs("div",{className:"map-actions",children:[u.jsx("button",{onClick:()=>r(n),children:"Download"}),u.jsx("button",{onClick:()=>o(n),children:"Share"})]})]})},x=({maps:e,onDownload:n,onShare:r})=>u.jsx("div",{className:"map-gallery",children:e.map((e=>u.jsx(g,{map:e,onDownload:n,onShare:r},e.id)))}),j={Flowcharts:[{id:"flowchart-1",title:"Medical Specialty Decision Tree",diagram:'flowchart TD\n    %% Root question\n    Q1(["Which medical specialty should I choose?"])\n    Q1 --\x3e Q2{"Are you a people person?"}\n\n    %% People Person: Yes branch\n    Q2 --\x3e|Yes| Q3{"Do you love variety across ages?"}\n    Q3 --\x3e|Yes| A1(["Family Medicine\n🏡 Grandma to dog ear"])\n    Q3 --\x3e|No| A2(["Pediatrics\n🧸 Baby talk & rainbows"])\n    Q3 --\x3e|Maybe| A3(["Psychiatry\n🛋️ Charged by emotion"])\n\n    %% People Person: No branch\n    Q2 --\x3e|No| Q4{"Do you hate small talk but like crisis?"}\n    Q4 --\x3e|Yes| B1(["Emergency Med\n🚑 4-hour crises"])\n    Q4 --\x3e|No| B2(["Radiology\n📷 Shadow whispers"])\n\n    %% People Person: Maybe branch\n    Q2 --\x3e|Maybe| Q5{"Do you like microscopes or scanners?"}\n    Q5 --\x3e|Microscopes| C1(["Pathology\n🔬 Dead is fun"])\n    Q5 --\x3e|Scanners| C2(["Interventional Radiology\n🩻 Catheter gymnastics"])\n\n    %% Add lateral branches for puzzle & action seekers\n    Q1 --\x3e D1(["Prefer puzzle & complexity?"])\n    D1 --\x3e D2(["Cardiology\n❤️ Beeps & boops"])\n    D1 --\x3e D3(["Infectious Disease\n🦠 Bug-chasing hero"])\n    D1 --\x3e D4(["Endocrinology\n🩸 Hormone tears"])\n\n    Q1 --\x3e E1(["Need adrenaline & action?"])\n    E1 --\x3e E2(["Trauma Surgery\n🔪 Midnight gunshots"])\n    E1 --\x3e E3(["Neurosurgery\n🧠 Saturday cortex"])\n\n    %% Lifestyle & ivory tower side panel\n    subgraph SIDE_PANEL ["Other Paths"]\n        F1(["Lifestyle Enthusiast\n💄 Dermatology & Ophthalmology"])\n        F2(["Academic Tower\n🎓 Oncology & PubHealth"])\n    end\n\n    classDef question fill:#fffbcc,stroke:#f4c542,stroke-width:2px;\n    classDef decision fill:#e0f7fa,stroke:#0288d1,stroke-width:2px;\n    classDef specialty fill:#f3e5f5,stroke:#7b1fa2,stroke-width:1px,stroke-dasharray: 5 5;\n\n    class Q1 question;\n    class Q2,Q3,Q4,Q5,D1,E1 decision;\n    class A1,A2,A3,B1,B2,C1,C2,D2,D3,D4,E2,E3,F1,F2 specialty;'}]},b=()=>{const[n,r]=e.useState("All"),o=Object.keys(j),a="All"===n?Object.values(j).flat():j[n],s="All"===n?a:a.filter((e=>e.category===n));return u.jsxs("div",{className:"app",children:[u.jsx(h,{}),u.jsx(y,{categories:o,onSelectCategory:r}),u.jsx(x,{maps:s,onDownload:e=>{console.log(`Downloading ${e.title}`)},onShare:e=>{console.log(`Sharing ${e.title}`)}})]})};m(document.getElementById("root")).render(u.jsx(e.StrictMode,{children:u.jsx(b,{})}));
//# sourceMappingURL=index-BRWt3Sut.js.map
